services:
  rest-api:
    image: docmansys-rest-api
    build:
      context: .
      dockerfile: DocManSys-RestAPI/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_URLS=http://+:8081
    depends_on:
      - docmansys-dal
      - rabbitmq 
    volumes:
      - ./uploads:/app/uploads

  webUI:
    image: docmansys-webui
    build:
      context: ./WebUI
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./WebUI/nginx.conf:/etc/nginx/nginx.conf  # Bind the Nginx configuration file
      - ./WebUI/wwwroot:/app/wwwroot  # Mount static files
    depends_on:
      - rest-api

  docmansys-dal:
    image: docmansys-dal_image
    build:
      context: .
      dockerfile: ./DocManSys-DAL/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - ASPNETCORE_URLS=http://+:8082
    depends_on:
      - db
  

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Bind the volume for persistent storage
    networks:
     - postgres
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
  
  
  ocr_worker:
    image: ocr_worker_image
    build:
      context: ./DocManSys-OCR_Worker
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    volumes:
      - ./uploads:/app/uploads

networks:
  postgres:
    driver: bridge

volumes:
  postgres_data:
  pgadmin:

